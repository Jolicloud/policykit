<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd" [
<!ENTITY version SYSTEM "version.xml">
]>
<refentry id="polkit-polkit-session">
<refmeta>
<refentrytitle role="top_of_page" id="polkit-polkit-session.top_of_page">Session</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>POLKIT Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>Session</refname>
<refpurpose>Represents a ConsoleKit Session.</refpurpose>
<!--[<xref linkend="desc" endterm="desc.title"/>]-->
</refnamediv>

<refsynopsisdiv id="polkit-polkit-session.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>
                    <link linkend="PolKitSession">PolKitSession</link>;
<link linkend="PolKitSession">PolKitSession</link>*      <link linkend="polkit-session-new">polkit_session_new</link>                  (void);
<link linkend="PolKitSession">PolKitSession</link>*      <link linkend="polkit-session-ref">polkit_session_ref</link>                  (<link linkend="PolKitSession">PolKitSession</link> *session);
<link linkend="void">void</link>                <link linkend="polkit-session-unref">polkit_session_unref</link>                (<link linkend="PolKitSession">PolKitSession</link> *session);
<link linkend="polkit-bool-t">polkit_bool_t</link>       <link linkend="polkit-session-set-uid">polkit_session_set_uid</link>              (<link linkend="PolKitSession">PolKitSession</link> *session,
                                                         <link linkend="uid-t">uid_t</link> uid);
<link linkend="polkit-bool-t">polkit_bool_t</link>       <link linkend="polkit-session-set-seat">polkit_session_set_seat</link>             (<link linkend="PolKitSession">PolKitSession</link> *session,
                                                         <link linkend="PolKitSeat">PolKitSeat</link> *seat);
<link linkend="polkit-bool-t">polkit_bool_t</link>       <link linkend="polkit-session-set-ck-objref">polkit_session_set_ck_objref</link>        (<link linkend="PolKitSession">PolKitSession</link> *session,
                                                         const <link linkend="char">char</link> *ck_objref);
<link linkend="polkit-bool-t">polkit_bool_t</link>       <link linkend="polkit-session-set-ck-is-active">polkit_session_set_ck_is_active</link>     (<link linkend="PolKitSession">PolKitSession</link> *session,
                                                         <link linkend="polkit-bool-t">polkit_bool_t</link> is_active);
<link linkend="polkit-bool-t">polkit_bool_t</link>       <link linkend="polkit-session-set-ck-is-local">polkit_session_set_ck_is_local</link>      (<link linkend="PolKitSession">PolKitSession</link> *session,
                                                         <link linkend="polkit-bool-t">polkit_bool_t</link> is_local);
<link linkend="polkit-bool-t">polkit_bool_t</link>       <link linkend="polkit-session-set-ck-remote-host">polkit_session_set_ck_remote_host</link>   (<link linkend="PolKitSession">PolKitSession</link> *session,
                                                         const <link linkend="char">char</link> *remote_host);
<link linkend="polkit-bool-t">polkit_bool_t</link>       <link linkend="polkit-session-get-uid">polkit_session_get_uid</link>              (<link linkend="PolKitSession">PolKitSession</link> *session,
                                                         <link linkend="uid-t">uid_t</link> *out_uid);
<link linkend="polkit-bool-t">polkit_bool_t</link>       <link linkend="polkit-session-get-seat">polkit_session_get_seat</link>             (<link linkend="PolKitSession">PolKitSession</link> *session,
                                                         <link linkend="PolKitSeat">PolKitSeat</link> **out_seat);
<link linkend="polkit-bool-t">polkit_bool_t</link>       <link linkend="polkit-session-get-ck-objref">polkit_session_get_ck_objref</link>        (<link linkend="PolKitSession">PolKitSession</link> *session,
                                                         <link linkend="char">char</link> **out_ck_objref);
<link linkend="polkit-bool-t">polkit_bool_t</link>       <link linkend="polkit-session-get-ck-is-active">polkit_session_get_ck_is_active</link>     (<link linkend="PolKitSession">PolKitSession</link> *session,
                                                         <link linkend="polkit-bool-t">polkit_bool_t</link> *out_is_active);
<link linkend="polkit-bool-t">polkit_bool_t</link>       <link linkend="polkit-session-get-ck-is-local">polkit_session_get_ck_is_local</link>      (<link linkend="PolKitSession">PolKitSession</link> *session,
                                                         <link linkend="polkit-bool-t">polkit_bool_t</link> *out_is_local);
<link linkend="polkit-bool-t">polkit_bool_t</link>       <link linkend="polkit-session-get-ck-remote-host">polkit_session_get_ck_remote_host</link>   (<link linkend="PolKitSession">PolKitSession</link> *session,
                                                         <link linkend="char">char</link> **out_remote_host);
<link linkend="void">void</link>                <link linkend="polkit-session-debug">polkit_session_debug</link>                (<link linkend="PolKitSession">PolKitSession</link> *session);
<link linkend="polkit-bool-t">polkit_bool_t</link>       <link linkend="polkit-session-validate">polkit_session_validate</link>             (<link linkend="PolKitSession">PolKitSession</link> *session);
</synopsis>
</refsynopsisdiv>









<refsect1 id="polkit-polkit-session.description" role="desc">
<title role="desc.title">Description</title>
<para>
This class is used to represent a session.</para>
<para>

</para>
</refsect1>

<refsect1 id="polkit-polkit-session.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="PolKitSession" role="struct">
<title>PolKitSession</title>
<indexterm zone="PolKitSession"><primary>PolKitSession</primary></indexterm><programlisting>typedef struct _PolKitSession PolKitSession;</programlisting>
<para>
Objects of this class are used to record information about a
session.</para>
<para>

</para></refsect2>
<refsect2 id="polkit-session-new" role="function">
<title>polkit_session_new ()</title>
<indexterm zone="polkit-session-new"><primary>polkit_session_new</primary></indexterm><programlisting><link linkend="PolKitSession">PolKitSession</link>*      polkit_session_new                  (void);</programlisting>
<para>
Creates a new <link linkend="PolKitSession"><type>PolKitSession</type></link> object.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the new object
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="polkit-session-ref" role="function">
<title>polkit_session_ref ()</title>
<indexterm zone="polkit-session-ref"><primary>polkit_session_ref</primary></indexterm><programlisting><link linkend="PolKitSession">PolKitSession</link>*      polkit_session_ref                  (<link linkend="PolKitSession">PolKitSession</link> *session);</programlisting>
<para>
Increase reference count.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&nbsp;:</term>
<listitem><simpara> The session object
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the object
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="polkit-session-unref" role="function">
<title>polkit_session_unref ()</title>
<indexterm zone="polkit-session-unref"><primary>polkit_session_unref</primary></indexterm><programlisting><link linkend="void">void</link>                polkit_session_unref                (<link linkend="PolKitSession">PolKitSession</link> *session);</programlisting>
<para>
Decreases the reference count of the object. If it becomes zero,
the object is freed. Before freeing, reference counts on embedded
objects are decresed by one.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&nbsp;:</term>
<listitem><simpara> The session object
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="polkit-session-set-uid" role="function">
<title>polkit_session_set_uid ()</title>
<indexterm zone="polkit-session-set-uid"><primary>polkit_session_set_uid</primary></indexterm><programlisting><link linkend="polkit-bool-t">polkit_bool_t</link>       polkit_session_set_uid              (<link linkend="PolKitSession">PolKitSession</link> *session,
                                                         <link linkend="uid-t">uid_t</link> uid);</programlisting>
<para>
Set the UNIX user id of the user owning the session.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&nbsp;:</term>
<listitem><simpara> The session object
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>uid</parameter>&nbsp;:</term>
<listitem><simpara> UNIX user id
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><type>TRUE</type></link> only if the value validated and was set
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="polkit-session-set-seat" role="function">
<title>polkit_session_set_seat ()</title>
<indexterm zone="polkit-session-set-seat"><primary>polkit_session_set_seat</primary></indexterm><programlisting><link linkend="polkit-bool-t">polkit_bool_t</link>       polkit_session_set_seat             (<link linkend="PolKitSession">PolKitSession</link> *session,
                                                         <link linkend="PolKitSeat">PolKitSeat</link> *seat);</programlisting>
<para>
Set the seat that the session belongs to. The reference count on
the given object will be increased by one. If an existing seat
object was set already, the reference count on that one will be
decreased by one.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&nbsp;:</term>
<listitem><simpara> The session object
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>seat</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="PolKitSeat"><type>PolKitSeat</type></link> object
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><type>TRUE</type></link> only if the value validated and was set
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="polkit-session-set-ck-objref" role="function">
<title>polkit_session_set_ck_objref ()</title>
<indexterm zone="polkit-session-set-ck-objref"><primary>polkit_session_set_ck_objref</primary></indexterm><programlisting><link linkend="polkit-bool-t">polkit_bool_t</link>       polkit_session_set_ck_objref        (<link linkend="PolKitSession">PolKitSession</link> *session,
                                                         const <link linkend="char">char</link> *ck_objref);</programlisting>
<para>
Set the D-Bus object path to the ConsoleKit session object.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&nbsp;:</term>
<listitem><simpara> The session object
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ck_objref</parameter>&nbsp;:</term>
<listitem><simpara> D-Bus object path
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><type>TRUE</type></link> only if the value validated and was set
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="polkit-session-set-ck-is-active" role="function">
<title>polkit_session_set_ck_is_active ()</title>
<indexterm zone="polkit-session-set-ck-is-active"><primary>polkit_session_set_ck_is_active</primary></indexterm><programlisting><link linkend="polkit-bool-t">polkit_bool_t</link>       polkit_session_set_ck_is_active     (<link linkend="PolKitSession">PolKitSession</link> *session,
                                                         <link linkend="polkit-bool-t">polkit_bool_t</link> is_active);</programlisting>
<para>
Set whether ConsoleKit regard the session as active.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&nbsp;:</term>
<listitem><simpara> The session object
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>is_active</parameter>&nbsp;:</term>
<listitem><simpara> whether ConsoleKit reports the session as active
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><type>TRUE</type></link> only if the value validated and was set
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="polkit-session-set-ck-is-local" role="function">
<title>polkit_session_set_ck_is_local ()</title>
<indexterm zone="polkit-session-set-ck-is-local"><primary>polkit_session_set_ck_is_local</primary></indexterm><programlisting><link linkend="polkit-bool-t">polkit_bool_t</link>       polkit_session_set_ck_is_local      (<link linkend="PolKitSession">PolKitSession</link> *session,
                                                         <link linkend="polkit-bool-t">polkit_bool_t</link> is_local);</programlisting>
<para>
Set whether ConsoleKit regard the session as local.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&nbsp;:</term>
<listitem><simpara> The session object
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>is_local</parameter>&nbsp;:</term>
<listitem><simpara> whether ConsoleKit reports the session as local
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><type>TRUE</type></link> only if the value validated and was set
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="polkit-session-set-ck-remote-host" role="function">
<title>polkit_session_set_ck_remote_host ()</title>
<indexterm zone="polkit-session-set-ck-remote-host"><primary>polkit_session_set_ck_remote_host</primary></indexterm><programlisting><link linkend="polkit-bool-t">polkit_bool_t</link>       polkit_session_set_ck_remote_host   (<link linkend="PolKitSession">PolKitSession</link> *session,
                                                         const <link linkend="char">char</link> *remote_host);</programlisting>
<para>
Set the remote host/display that ConsoleKit reports the session to
occur at.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&nbsp;:</term>
<listitem><simpara> The session object
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>remote_host</parameter>&nbsp;:</term>
<listitem><simpara> hostname of the host/display that ConsoleKit reports
the session to occur at
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><type>TRUE</type></link> only if the value validated and was set
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="polkit-session-get-uid" role="function">
<title>polkit_session_get_uid ()</title>
<indexterm zone="polkit-session-get-uid"><primary>polkit_session_get_uid</primary></indexterm><programlisting><link linkend="polkit-bool-t">polkit_bool_t</link>       polkit_session_get_uid              (<link linkend="PolKitSession">PolKitSession</link> *session,
                                                         <link linkend="uid-t">uid_t</link> *out_uid);</programlisting>
<para>
Get the UNIX user id of the user owning the session.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&nbsp;:</term>
<listitem><simpara> The session object
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_uid</parameter>&nbsp;:</term>
<listitem><simpara> UNIX user id
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> TRUE iff the value is returned
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="polkit-session-get-seat" role="function">
<title>polkit_session_get_seat ()</title>
<indexterm zone="polkit-session-get-seat"><primary>polkit_session_get_seat</primary></indexterm><programlisting><link linkend="polkit-bool-t">polkit_bool_t</link>       polkit_session_get_seat             (<link linkend="PolKitSession">PolKitSession</link> *session,
                                                         <link linkend="PolKitSeat">PolKitSeat</link> **out_seat);</programlisting>
<para>
Get the seat that the session belongs to.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&nbsp;:</term>
<listitem><simpara> The session object
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_seat</parameter>&nbsp;:</term>
<listitem><simpara> Returns the seat the session belongs to. Shall not
be unreffed by the caller.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> TRUE iff the value is returned
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="polkit-session-get-ck-objref" role="function">
<title>polkit_session_get_ck_objref ()</title>
<indexterm zone="polkit-session-get-ck-objref"><primary>polkit_session_get_ck_objref</primary></indexterm><programlisting><link linkend="polkit-bool-t">polkit_bool_t</link>       polkit_session_get_ck_objref        (<link linkend="PolKitSession">PolKitSession</link> *session,
                                                         <link linkend="char">char</link> **out_ck_objref);</programlisting>
<para>
Get the D-Bus object path to the ConsoleKit session object.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&nbsp;:</term>
<listitem><simpara> The session object
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_ck_objref</parameter>&nbsp;:</term>
<listitem><simpara> D-Bus object path. Shall not be freed by the caller.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> TRUE iff the value is returned
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="polkit-session-get-ck-is-active" role="function">
<title>polkit_session_get_ck_is_active ()</title>
<indexterm zone="polkit-session-get-ck-is-active"><primary>polkit_session_get_ck_is_active</primary></indexterm><programlisting><link linkend="polkit-bool-t">polkit_bool_t</link>       polkit_session_get_ck_is_active     (<link linkend="PolKitSession">PolKitSession</link> *session,
                                                         <link linkend="polkit-bool-t">polkit_bool_t</link> *out_is_active);</programlisting>
<para>
Get whether ConsoleKit regard the session as active.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&nbsp;:</term>
<listitem><simpara> The session object
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_is_active</parameter>&nbsp;:</term>
<listitem><simpara> whether ConsoleKit reports the session as active
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> TRUE iff the value is returned
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="polkit-session-get-ck-is-local" role="function">
<title>polkit_session_get_ck_is_local ()</title>
<indexterm zone="polkit-session-get-ck-is-local"><primary>polkit_session_get_ck_is_local</primary></indexterm><programlisting><link linkend="polkit-bool-t">polkit_bool_t</link>       polkit_session_get_ck_is_local      (<link linkend="PolKitSession">PolKitSession</link> *session,
                                                         <link linkend="polkit-bool-t">polkit_bool_t</link> *out_is_local);</programlisting>
<para>
Set whether ConsoleKit regard the session as local.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&nbsp;:</term>
<listitem><simpara> The session object
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_is_local</parameter>&nbsp;:</term>
<listitem><simpara> whether ConsoleKit reports the session as local
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> TRUE iff the value is returned
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="polkit-session-get-ck-remote-host" role="function">
<title>polkit_session_get_ck_remote_host ()</title>
<indexterm zone="polkit-session-get-ck-remote-host"><primary>polkit_session_get_ck_remote_host</primary></indexterm><programlisting><link linkend="polkit-bool-t">polkit_bool_t</link>       polkit_session_get_ck_remote_host   (<link linkend="PolKitSession">PolKitSession</link> *session,
                                                         <link linkend="char">char</link> **out_remote_host);</programlisting>
<para>
Get the remote host/display that ConsoleKit reports the session to
occur at.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&nbsp;:</term>
<listitem><simpara> The session object
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>out_remote_host</parameter>&nbsp;:</term>
<listitem><simpara> hostname of the host/display that ConsoleKit
reports the session to occur at. Shall not be freed by the caller.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> TRUE iff the value is returned
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="polkit-session-debug" role="function">
<title>polkit_session_debug ()</title>
<indexterm zone="polkit-session-debug"><primary>polkit_session_debug</primary></indexterm><programlisting><link linkend="void">void</link>                polkit_session_debug                (<link linkend="PolKitSession">PolKitSession</link> *session);</programlisting>
<para>
Print debug details</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&nbsp;:</term>
<listitem><simpara> the object
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="polkit-session-validate" role="function">
<title>polkit_session_validate ()</title>
<indexterm zone="polkit-session-validate"><primary>polkit_session_validate</primary></indexterm><programlisting><link linkend="polkit-bool-t">polkit_bool_t</link>       polkit_session_validate             (<link linkend="PolKitSession">PolKitSession</link> *session);</programlisting>
<para>
Validate the object</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>session</parameter>&nbsp;:</term>
<listitem><simpara> the object
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><type>TRUE</type></link> iff the object is valid.
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
